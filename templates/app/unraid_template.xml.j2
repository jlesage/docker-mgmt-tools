<?xml version="1.0"?>
<Container version="2">
  <Name>{{ app.friendly_name|replace(' ', '') }}</Name>
  <Repository>jlesage/{{ app.name }}</Repository>
  <Registry>https://hub.docker.com/r/jlesage/{{ app.name }}/</Registry>
  <Network>bridge</Network>
  <Privileged>false</Privileged>
  <Support>{{ app.unraid.support_url }}</Support>
  <ReadMe>https://github.com/jlesage/docker-{{ app.name }}#readme</ReadMe>
  <Overview>
{{ app.project.description|replace('\n', ' ') }}

{% if app.gui_type.lower() == 'x11' %}
The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.
{%- endif %}

{% if app.documentation.overview is defined %}

{{ app.documentation.overview|replace('\n', ' ') }}
{% endif %}

Also, being based on Alpine Linux, size of this container is very small.

For a complete documentation of this container, see https://github.com/jlesage/docker-{{ app.name }}#readme
{% if app.unraid.extra_description is defined %}

{{ app.unraid.extra_description|replace('\n', ' ') }}
{% endif %}
  </Overview>
  <Category>{{ app.unraid.category }}</Category>
  <WebUI>http://[IP]:[PORT:{% if app.gui_port is defined %}{{ app.gui_port }}{% else %}5800{% endif %}]</WebUI>
  <TemplateURL>https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/{{ app.name }}.xml</TemplateURL>
  <Icon>https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/{{ app.name }}-icon.png</Icon>
{% if container.extra_params is defined and container.extra_params|length > 0 %}
  <ExtraParams>{% for item in container.extra_params %}--{{ item.name }} {{ item.value }}{{ " " if not loop.last else "" }}{% endfor %}</ExtraParams>
{% else %}
  <ExtraParams/>
{% endif %}
  <Description>
{{ app.project.description|replace('\n', ' ') }}

{% if app.gui_type.lower() == 'x11' %}
The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.
{%- endif %}

{% if app.documentation.overview is defined %}

{{ app.documentation.overview|replace('\n', ' ') }}
{% endif %}

Also, being based on Alpine Linux, size of this container is very small.

For a complete documentation of this container, see https://github.com/jlesage/docker-{{ app.name }}/blob/master/README.md.
{% if app.unraid.extra_description is defined %}

{{ app.unraid.extra_description }}
{% endif %}
  </Description>
  <Beta>False</Beta>
  <Project>{{ app.project.url }}</Project>
  <Date>{{ app.changelog[0].date.strftime('%Y-%m-%d') }}</Date>
  <Changes>
{% for item in app.changelog|default([]) %}
###v{{ item.version }} ({{ item.date.strftime('%Y-%m-%d') }})
  {% for chg in item.changes %}
    {% if chg.startswith('2:') %}
      {% set level = 2 %}
      {% set chgtext = chg[2:] %}
    {% else %}
      {% set level = 1 %}
      {% set chgtext = chg %}
    {% endif %}
    {% for i in range((level - 1 )* 2) %}&#x00a0;{% endfor %}- {{ chgtext }}
  {% endfor %}

{% endfor %}
  </Changes>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
{% for item in container.ports|default([]) if item.unraid_template is defined %}
      <Port>
        <HostPort>{{ item.unraid_template.default|default(item.number, true) }}</HostPort>
        <ContainerPort>{{ item.number }}</ContainerPort>
        <Protocol>{{ item.protocol }}</Protocol>
      </Port>
{% endfor %}
    </Publish>
  </Networking>
  <Data>
{% for item in container.volumes|default([]) if item.unraid_template is defined %}
  {% if item.container_path in container.unsupported_volume|default([]) %}{% continue %}{% endif %}
    <Volume>
    {% if item.unraid_template.default is defined %}
      <HostDir>{{ item.unraid_template.default }}</HostDir>
    {% else %}
      <HostDir/>
    {% endif %}
      <ContainerDir>{{ item.container_path }}</ContainerDir>
      <Mode>{{ item.permissions }}</Mode>
    </Volume>
{% endfor %}
  </Data>
  <Environment>
{% for item in container.environment_variables|default([]) if item.type == 'public' and item.unraid_template is defined %}
    <Variable>
    {% if item.unraid_template.default|default(item.default, true) is defined and item.unraid_template.default|default(item.default, true) is not none %}
      <Value>{{ item.unraid_template.default|default(item.default, true) }}</Value>
    {% else %}
      <Value/>
    {% endif %}
      <Name>{{ item.name }}</Name>
      <Mode/>
    </Variable>
{% endfor %}
  </Environment>
  <!-- Volume Mappings -->
{% for item in container.volumes|default([]) if item.unraid_template is defined %}
  {% if item.container_path in container.unsupported_volume|default([]) %}{% continue %}{% endif %}
  <Config Name="{{ item.unraid_template.title }}" Target="{{ item.container_path }}" Default="{{ item.unraid_template.default|default('', true) }}" Mode="{{ item.permissions }}" Description="{{ item.unraid_template.description|default(item.description, true)|replace('"', '&quot;') }}" Type="Path" Display="{{ item.unraid_template.display }}" Required="{{ item.unraid_template.required }}" Mask="{{ item.unraid_template.mask }}"/>
{% endfor %}
  <!-- Variable Mappings -->
{% for item in container.environment_variables|default([]) if item.type == 'public' and item.unraid_template is defined %}
  <Config Name="{{ item.unraid_template.title }}" Target="{{ item.name }}" Default="{{ item.unraid_template.default|default(item.default|default('')) }}" Mode="" Description="{{ item.unraid_template.description|default(item.description, true)|replace('"', '&quot;') }}" Type="Variable" Display="{{ item.unraid_template.display }}" Required="{{ item.unraid_template.required }}" Mask="{{ item.unraid_template.mask }}"/>
{% endfor %}
  <!-- Port Mappings -->
{% for item in container.ports|default([]) if item.unraid_template is defined %}
  <Config Name="{{ item.unraid_template.title }}" Target="{{ item.number }}" Default="{{ item.unraid_template.default|default(item.number, true) }}" Mode="{{ item.protocol }}" Description="{{ item.unraid_template.description|default(item.description, true)|replace('"', '&quot;') }}" Type="Port" Display="{{ item.unraid_template.display }}" Required="{{ item.unraid_template.required }}" Mask="{{ item.unraid_template.mask }}"/>
{% endfor %}
</Container>
